name: Terraform Deploy RG with Remote State (prod)

on:
  push:
    paths:
      - 'module7/terraform-projects/environments/prod/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  WORKDIR: module7/terraform-projects/environments/prod
  BACKEND_HCL: module7/terraform-projects/shared/backend.hcl
  BACKEND_KEY: projects/environments/prod/prod.tfstate

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.x

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Export ARM_* for Terraform (OIDC)
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Load vars from Key Vault â†’ TF_VAR_*
        env:
          KV: ${{ secrets.KEYVAULT_NAME }}
        run: |
          set -euo pipefail
          RG_NAME=$(az keyvault secret show --vault-name "$KV" --name rgname --query value -o tsv)
          LOCATION=$(az keyvault secret show --vault-name "$KV" --name location --query value -o tsv)
          echo "TF_VAR_rg_name=$RG_NAME" >> $GITHUB_ENV
          echo "TF_VAR_location=$LOCATION" >> $GITHUB_ENV

      - name: Terraform Init (AzureRM backend)
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform init -input=false \
            -backend-config="${{ github.workspace }}/${{ env.BACKEND_HCL }}" \
            -backend-config="key=${{ env.BACKEND_KEY }}"

      - name: Terraform Validate
        working-directory: ${{ env.WORKDIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.WORKDIR }}
        run: terraform plan -input=false

      - name: Terraform Apply (only on main)
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.WORKDIR }}
        run: terraform apply -auto-approve -input=false
