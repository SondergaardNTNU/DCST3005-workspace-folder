name: Terraform CD

on:
  push:
    branches:
      - main
    paths:
      - module9/buildOnce-deployMany/terraform/**

permissions:
  id-token: write
  contents: read

jobs:
  deploy-dev:
    name: Deploy to DEV
    runs-on: ubuntu-latest
    environment: dev
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: module9/buildOnce-deployMany/backend-configs/backend-dev.tfvars
      TFVARS: module9/buildOnce-deployMany/environments/dev.tfvars
      ENVIRONMENT: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: terraform apply -auto-approve -var-file=${{ env.TFVARS }} -no-color
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        run: terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY

  deploy-test:
    name: Deploy to TEST
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment: test
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: module9/buildOnce-deployMany/backend-configs/backend-test.tfvars
      TFVARS: module9/buildOnce-deployMany/environments/test.tfvars
      ENVIRONMENT: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: terraform apply -auto-approve -var-file=${{ env.TFVARS }} -no-color
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        run: terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY

  deploy-prod:
    name: Deploy to PROD
    runs-on: ubuntu-latest
    needs: deploy-test
    environment: prod
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: module9/buildOnce-deployMany/backend-configs/backend-prod.tfvars
      TFVARS: module9/buildOnce-deployMany/environments/prod.tfvars
      ENVIRONMENT: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: terraform apply -auto-approve -var-file=${{ env.TFVARS }} -no-color
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        run: terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY
      - name: Deployment Summary
        run: |
          echo "## ðŸŽ‰ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All environments have been successfully deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… DEV" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… TEST" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… PROD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Same Terraform code deployed to all environments!**" >> $GITHUB_STEP_SUMMARY