name: Oblig2 Terraform CD

on:
  push:
    branches:
      - main
    paths:
      - "module9/buildOnce-deployMany/terraform/**"

permissions:
  id-token: write
  contents: read

jobs:
  deploy-dev:
    name: Deploy to DEV
    runs-on: ubuntu-latest
    environment: dev
    env:
      WORKDIR: "module9/buildOnce-deployMany/terraform"
      BACKEND_HCL: "module9/buildOnce-deployMany/shared/backend.hcl"
      TF_INPUT: "false"
      TF_IN_AUTOMATION: "true"
      ENVIRONMENT: "dev"
      LOCATION: "norwayeast"
      PROJECT_NAME: "shs"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Export ARM_* for Terraform (OIDC)
        run: |
          {
            echo "ARM_USE_OIDC=true"
            echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
            echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}"
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          } >> "$GITHUB_ENV"
      
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform init \
            -backend-config="${{ github.workspace }}/${{ env.BACKEND_HCL }}" \
            -backend-config="key=oblig2/${{ env.ENVIRONMENT }}/${{ env.ENVIRONMENT }}.tfstate" \
            -input=false \
            -no-color
      
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform apply -auto-approve \
            -var-file="../environments/${{ env.ENVIRONMENT }}.tfvars" \
            -no-color
      
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        id: output
        run: |
          echo "### Terraform Outputs for DEV" >> $GITHUB_STEP_SUMMARY
          terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY

  deploy-test:
    name: Deploy to TEST
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment: test
    env:
      WORKDIR: "module9/buildOnce-deployMany/terraform"
      BACKEND_HCL: "module9/buildOnce-deployMany/shared/backend.hcl"
      TF_INPUT: "false"
      TF_IN_AUTOMATION: "true"
      ENVIRONMENT: "test"
      LOCATION: "norwayeast"
      PROJECT_NAME: "shs"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Export ARM_* for Terraform (OIDC)
        run: |
          {
            echo "ARM_USE_OIDC=true"
            echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
            echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}"
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          } >> "$GITHUB_ENV"
      
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform init \
            -backend-config="${{ github.workspace }}/${{ env.BACKEND_HCL }}" \
            -backend-config="key=oblig2/${{ env.ENVIRONMENT }}/${{ env.ENVIRONMENT }}.tfstate" \
            -input=false \
            -no-color
      
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform apply -auto-approve \
            -var-file="../environments/${{ env.ENVIRONMENT }}.tfvars" \
            -no-color
      
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        id: output
        run: |
          echo "### Terraform Outputs for TEST" >> $GITHUB_STEP_SUMMARY
          terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY

  deploy-prod:
    name: Deploy to PROD
    runs-on: ubuntu-latest
    needs: deploy-test
    environment: prod
    env:
      WORKDIR: "module9/buildOnce-deployMany/terraform"
      BACKEND_HCL: "module9/buildOnce-deployMany/shared/backend.hcl"
      TF_INPUT: "false"
      TF_IN_AUTOMATION: "true"
      ENVIRONMENT: "prod"
      LOCATION: "norwayeast"
      PROJECT_NAME: "shs"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Export ARM_* for Terraform (OIDC)
        run: |
          {
            echo "ARM_USE_OIDC=true"
            echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
            echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}"
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          } >> "$GITHUB_ENV"
      
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform init \
            -backend-config="${{ github.workspace }}/${{ env.BACKEND_HCL }}" \
            -backend-config="key=oblig2/${{ env.ENVIRONMENT }}/${{ env.ENVIRONMENT }}.tfstate" \
            -input=false \
            -no-color
      
      - name: Terraform Apply
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform apply -auto-approve \
            -var-file="../environments/${{ env.ENVIRONMENT }}.tfvars" \
            -no-color
      
      - name: Terraform Output
        working-directory: ${{ env.WORKDIR }}
        id: output
        run: |
          echo "### Terraform Outputs for PROD" >> $GITHUB_STEP_SUMMARY
          terraform output -no-color | tee -a $GITHUB_STEP_SUMMARY
      
      - name: Deployment Summary
        run: |
          echo "## ðŸŽ‰ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All environments have been successfully deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… DEV" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… TEST" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… PROD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Same Terraform code deployed to all environments!**" >> $GITHUB_STEP_SUMMARY
