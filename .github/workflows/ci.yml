name: Oblig2 Terraform CI

on:
  pull_request:
    branches:
      - main
    paths:
      - module9/buildOnce-deployMany/terraform/**

permissions:
  id-token: write
  contents: read

jobs:
  validate-dev:
    name: Validate DEV
    runs-on: ubuntu-latest
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: ../backend-configs/backend-dev.tfvars
      TFVARS: ../environments/dev.tfvars
      ENVIRONMENT: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Format
        working-directory: ${{ env.WORKDIR }}
        run: terraform fmt -check -recursive
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Validate
        working-directory: ${{ env.WORKDIR }}
        run: terraform validate -no-color
      - name: Terraform Plan
        working-directory: ${{ env.WORKDIR }}
        run: terraform plan -var-file=${{ env.TFVARS }} -no-color

  validate-test:
    name: Validate TEST
    runs-on: ubuntu-latest
    needs: validate-dev
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: ../backend-configs/backend-test.tfvars
      TFVARS: ../environments/test.tfvars
      ENVIRONMENT: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Format
        working-directory: ${{ env.WORKDIR }}
        run: terraform fmt -check -recursive
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Validate
        working-directory: ${{ env.WORKDIR }}
        run: terraform validate -no-color
      - name: Terraform Plan
        working-directory: ${{ env.WORKDIR }}
        run: terraform plan -var-file=${{ env.TFVARS }} -no-color

  validate-prod:
    name: Validate PROD
    runs-on: ubuntu-latest
    needs: validate-test
    env:
      WORKDIR: module9/buildOnce-deployMany/terraform
      BACKEND_CONFIG: ../backend-configs/backend-prod.tfvars
      TFVARS: ../environments/prod.tfvars
      ENVIRONMENT: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false
      - name: Terraform Format
        working-directory: ${{ env.WORKDIR }}
        run: terraform fmt -check -recursive
      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}
        run: terraform init -backend-config=${{ env.BACKEND_CONFIG }} -input=false -no-color
      - name: Terraform Validate
        working-directory: ${{ env.WORKDIR }}
        run: terraform validate -no-color
      - name: Terraform Plan
        working-directory: ${{ env.WORKDIR }}
        run: terraform plan -var-file=${{ env.TFVARS }} -no-color
